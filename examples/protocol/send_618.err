Traceback (most recent call last):
  File "/export/home/ccprak16/Documents/Linus/MMG/workspace/examples/13-h2of2-dianion.py", line 13, in <module>
    p = pot.MolecularPotential(s, geometry, charge=charge, multiplicity=mult, rounding=5, basis='6-31g', theory='rhf')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/export/home/ccprak16/Documents/Linus/MMG/workspace/libqdmmg/potential/__init__.py", line 32, in MolecularPotential
    return molpot.MolecularPotential(sim, eq_geometry, rounding, theory, xc, basis, charge, multiplicity)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/export/home/ccprak16/Documents/Linus/MMG/workspace/libqdmmg/potential/mol_potential.py", line 31, in __init__
    self.gen_equilibrium_data()
  File "/export/home/ccprak16/Documents/Linus/MMG/workspace/libqdmmg/potential/mol_potential.py", line 51, in gen_equilibrium_data
    assert len(self.norm_modes) == self.sim.dim, f"Incorrect number of dimensions specified in Simulation object. Should be {len(self.norm_modes)} but is {self.sim.dim}"
AssertionError: Incorrect number of dimensions specified in Simulation object. Should be 9 but is 6
